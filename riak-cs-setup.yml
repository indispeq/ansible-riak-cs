---

# start containers
- hosts: localhost
  become: true
  become_user: root
  become_method: sudo
  roles:
  - novafloss.boot

# gather facts
- hosts: all

  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - setup: {}

    - name: "Build hosts file"
      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=present
      when: hostvars[item].ansible_default_ipv4.address is defined
      with_items: "{{ groups['all'] }}"

# install riak kv and cs
- hosts: riak_cs_nodes

  become: yes
  become_method: sudo
  become_user: root

  vars:
# if haproxy_vip is not defined then this otherwise haproxy_vip as defined in group_vars/all
    stanchion_listener_address: "{{ hostvars[groups['stanchion_nodes'][0]]['ansible_default_ipv4']['address'] }}"

  pre_tasks:
    - include_vars: secrets.yml

  roles:
    - role: riak-cs

# install haproxy/keepalived on lb master
- hosts: haproxy_nodes[0]

  become: yes
  become_method: sudo
  become_user: root

  vars:
    keepalived_lvs_id: haproxy_master
    keepalived_vrrp_instance_state: MASTER
    keepalived_vrrp_instance_priority: 101

  roles:
    - role: riak-cs-haproxy

# install haproxy/keepalived on lb slave(s)
- hosts: haproxy_nodes[1:]

  become: yes
  become_method: sudo
  become_user: root

  vars:
    keepalived_lvs_id: haproxy_slave
    keepalived_vrrp_instance_state: SLAVE
    keepalived_vrrp_instance_priority: 100

  roles:
    - role: riak-cs-haproxy

# install stanchion
- hosts: stanchion_nodes

  become: yes
  become_method: sudo
  become_user: root

  vars:
    riakkv_host_address: "{{ hostvars[groups['haproxy_nodes'][0]]['ansible_default_ipv4']['address'] }}"

  roles:
    - role: stanchion

# create cluster and start services
- hosts: riak_cs_nodes

  become: yes
  become_method: sudo
  become_user: root
  serial: 1

  tasks:
    - service: name=riak state=started

    - shell: "riak-admin cluster status | grep riak@{{ hostvars[groups['riak_cs_nodes'][0]]['inventory_hostname'] }}"
      when: inventory_hostname != groups.riak_cs_nodes[0]
      ignore_errors: true
      register: result

    - shell: "riak-admin cluster join riak@{{ hostvars[groups['riak_cs_nodes'][0]]['inventory_hostname'] }}"
      when: (result|failed) and (not result|skipped)

    - shell: "riak-admin cluster plan"
      when: (result|failed) and (not result|skipped)

    - shell: "riak-admin cluster commit"
      when: (result|failed) and (not result|skipped)

- hosts: stanchion_nodes

  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - service: name=stanchion state=started

- hosts: riak_cs_nodes

  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - service: name=riak-cs state=started
